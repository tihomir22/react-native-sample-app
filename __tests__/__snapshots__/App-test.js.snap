// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppButton Renders Correctly 1`] = `
<View
  allowFontScaling={false}
  style={
    Array [
      Object {
        "alignItems": "center",
        "display": "flex",
        "justifyContent": "center",
        "width": "100%",
      },
      undefined,
    ]
  }
>
  <View
    accessible={true}
    focusable={false}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffa185",
        "borderRadius": 50,
        "display": "flex",
        "height": 52,
        "justifyContent": "center",
        "opacity": 1,
        "width": 236,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "white",
          "fontFamily": "BryantPro-Bold",
          "fontSize": 26,
        }
      }
    />
  </View>
</View>
`;

exports[`AppHeader Renders Correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#025ef8",
      "display": "flex",
      "elevation": 2,
      "flexDirection": "row",
      "height": 80,
      "justifyContent": "space-between",
      "paddingHorizontal": 17,
      "paddingTop": 25,
      "width": "100%",
      "zIndex": 101,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "height": 54,
        "justifyContent": "center",
        "width": 54,
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "flex-end",
          "height": 54,
          "justifyContent": "center",
          "opacity": 1,
          "width": 54,
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/assets/images/left.png",
          }
        }
        style={
          Object {
            "height": 20,
            "marginRight": 10,
            "width": 20,
          }
        }
      />
    </View>
  </View>
  <Text
    allowFontScaling={false}
    numberOfLines={1}
    style={
      Object {
        "color": "white",
        "fontFamily": "Roboto-Medium",
        "fontSize": 24,
        "fontWeight": "600",
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "height": 54,
        "justifyContent": "center",
        "width": 54,
      }
    }
  />
</View>
`;

exports[`Loader Renders Correctly 1`] = `
<Modal
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(0,0,0,0.5)",
          "flex": 1,
          "justifyContent": "center",
        },
        undefined,
      ]
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/images/loader1.gif",
        }
      }
      style={
        Object {
          "height": 80,
          "resizeMode": "contain",
          "width": 80,
        }
      }
    />
  </View>
</Modal>
`;

exports[`SearchBar Renders Correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#f6f8fd",
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFF",
        "borderColor": "#dfdfdf",
        "borderRadius": 50,
        "borderWidth": 2,
        "flexDirection": "row",
        "height": 45,
        "margin": 10,
        "width": "85%",
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/images/search.png",
        }
      }
      style={
        Object {
          "alignItems": "center",
          "height": 25,
          "margin": 8,
          "padding": 14,
          "resizeMode": "stretch",
          "width": 25,
        }
      }
    />
    <TextInput
      allowFontScaling={false}
      editable={true}
      placeholder="Search Property"
      placeholderTextColor="#808080"
      rejectResponderTermination={true}
      selectTextOnFocus={true}
      style={
        Object {
          "flex": 1,
          "fontFamily": "Avenir",
          "fontSize": 17,
        }
      }
      underlineColorAndroid="transparent"
    />
  </View>
</View>
`;

exports[`ShareUpdate Renders Correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#f5f8fd",
      "display": "flex",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#025ef8",
        "display": "flex",
        "elevation": 2,
        "flexDirection": "row",
        "height": 80,
        "justifyContent": "space-between",
        "paddingHorizontal": 17,
        "paddingTop": 25,
        "width": "100%",
        "zIndex": 101,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "height": 54,
          "justifyContent": "center",
          "width": 54,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "height": 54,
            "justifyContent": "center",
            "opacity": 1,
            "width": 54,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/assets/images/left.png",
            }
          }
          style={
            Object {
              "height": 20,
              "marginRight": 10,
              "width": 20,
            }
          }
        />
      </View>
    </View>
    <Text
      allowFontScaling={false}
      numberOfLines={1}
      style={
        Object {
          "color": "white",
          "fontFamily": "Roboto-Medium",
          "fontSize": 24,
          "fontWeight": "600",
        }
      }
    >
      Share Update
    </Text>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "height": 54,
          "justifyContent": "center",
          "width": 54,
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#83b1ff",
        "justifyContent": "center",
        "paddingVertical": 15,
        "width": "100%",
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Object {
          "alignSelf": "center",
          "color": "#FFF",
          "fontFamily": "Roboto-Medium",
          "fontSize": 19,
          "textAlign": "center",
          "width": "70%",
        }
      }
    >
      
    </Text>
    <Text
      allowFontScaling={false}
      style={
        Object {
          "alignSelf": "center",
          "color": "#FFF",
          "fontFamily": "Roboto-Medium",
          "fontSize": 19,
          "textAlign": "center",
          "width": "70%",
        }
      }
    >
      undefined, undefined, undefined
    </Text>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Object {
        "alignItems": "center",
        "paddingVertical": 20,
      }
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "width": 690,
          }
        }
      />
      <View
        style={
          Array [
            Object {
              "height": 90,
              "width": 690,
            },
            Object {
              "zIndex": 5000,
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderBottomLeftRadius": 5,
              "borderBottomRightRadius": 5,
              "borderColor": "#dfdfdf",
              "borderTopLeftRadius": 5,
              "borderTopRightRadius": 5,
              "borderWidth": 1,
              "flex": 1,
              "flexDirection": "row",
              "opacity": 1,
              "paddingHorizontal": 10,
              "paddingVertical": 5,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#868686",
                  "fontSize": 20,
                },
                Object {
                  "color": "#CECECE",
                  "fontSize": 20,
                },
                Object {
                  "flex": 1,
                  "opacity": 1,
                },
                Object {
                  "marginLeft": 5,
                  "marginRight": 0,
                },
                false,
                Object {
                  "marginLeft": 5,
                },
              ]
            }
          >
            
          </Text>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomLeftRadius": 0,
                  "borderTopLeftRadius": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingVertical": 8,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "opacity": 1,
                  },
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#CECECE",
                      "fontSize": 15,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Feather",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#fff",
                "borderBottomLeftRadius": 5,
                "borderBottomRightRadius": 5,
                "borderColor": "#dfdfdf",
                "borderTopLeftRadius": 5,
                "borderTopRightRadius": 5,
                "borderWidth": 1,
                "paddingHorizontal": 10,
                "paddingVertical": 5,
              },
              Object {
                "alignItems": "center",
                "borderTopLeftRadius": 0,
                "borderTopRightRadius": 0,
                "justifyContent": "center",
                "position": "absolute",
                "width": "100%",
              },
              Object {
                "backgroundColor": "#fafafa",
              },
              Object {
                "borderWidth": 0,
                "display": "none",
                "position": "relative",
              },
              Object {
                "maxHeight": 500,
                "top": undefined,
                "zIndex": 5000,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "width": "100%",
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              defaultValue={null}
              onChangeText={[Function]}
              placeholder="Search for an item"
              placeholderTextColor="gray"
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "borderBottomWidth": 1,
                    "borderColor": "#dfdfdf",
                    "flex": 1,
                    "marginBottom": 10,
                    "paddingHorizontal": 0,
                    "paddingVertical": 8,
                  },
                  Object {
                    "color": "#868686",
                    "fontSize": 20,
                  },
                ]
              }
              underlineColorAndroid="transparent"
            />
          </View>
          <RCTScrollView
            nestedScrollEnabled={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "marginBottom": 15,
                    "marginVertical": 10,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#CECECE",
                      "textAlign": "center",
                    }
                  }
                >
                  No results
                </Text>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "white",
            "height": 90,
            "justifyContent": "center",
            "marginTop": -90,
            "paddingLeft": 10,
            "width": 690,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#CECECE",
              "fontSize": 20,
            }
          }
        >
          Recipent(s)
        </Text>
      </View>
      <Text
        style={
          Object {
            "color": "#858FA1",
            "fontFamily": "Poppins-Regular",
            "fontSize": 18,
            "marginTop": 10,
            "paddingVertical": 8,
            "width": 690,
          }
        }
      >
        Subject
      </Text>
      <TextInput
        allowFontScaling={false}
        maxLength={100}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Subject"
        placeholderTextColor="#CECECE"
        rejectResponderTermination={true}
        returnKeyType="next"
        style={
          Object {
            "backgroundColor": "#FFF",
            "borderColor": "#aaa",
            "borderRadius": 8,
            "borderWidth": 0.2,
            "fontFamily": "Poppins-Regular",
            "fontSize": 19,
            "height": 50,
            "paddingHorizontal": 10,
            "width": 690,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
      <Text
        style={
          Object {
            "color": "#858FA1",
            "fontFamily": "Poppins-Regular",
            "fontSize": 18,
            "marginTop": 10,
            "paddingVertical": 8,
            "width": 690,
          }
        }
      >
        Write Message
      </Text>
      <TextInput
        allowFontScaling={false}
        maxLength={1024}
        multiline={true}
        onChangeText={[Function]}
        placeholder="Messages"
        placeholderTextColor="#CECECE"
        rejectResponderTermination={true}
        style={
          Object {
            "backgroundColor": "#FFF",
            "borderColor": "#ccc",
            "borderRadius": 8,
            "borderWidth": 0.2,
            "fontFamily": "Poppins-Regular",
            "fontSize": 19,
            "height": 155,
            "paddingHorizontal": 10,
            "textAlignVertical": "top",
            "width": 690,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
      <View
        style={
          Object {
            "paddingVertical": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#858FA1",
              "fontFamily": "Poppins-Regular",
              "fontSize": 18,
              "marginTop": 10,
              "paddingVertical": 8,
              "width": 690,
            }
          }
        >
          What would you like to share:
        </Text>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/images/check.png",
                }
              }
              style={
                Object {
                  "height": 25,
                  "width": 25,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "flex": 1,
                    "marginLeft": 10,
                  },
                  Object {
                    "color": "#858FA1",
                    "fontFamily": "Poppins-Regular",
                    "fontSize": 18,
                    "paddingVertical": 8,
                    "width": 690,
                  },
                ]
              }
            >
              Status
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/images/check.png",
                }
              }
              style={
                Object {
                  "height": 25,
                  "width": 25,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "flex": 1,
                    "marginLeft": 10,
                  },
                  Object {
                    "color": "#858FA1",
                    "fontFamily": "Poppins-Regular",
                    "fontSize": 18,
                    "paddingVertical": 8,
                    "width": 690,
                  },
                ]
              }
            >
              Important Dates
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Image
              source={
                Object {
                  "testUri": "../../../src/assets/images/uncheck.png",
                }
              }
              style={
                Object {
                  "height": 25,
                  "width": 25,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "flex": 1,
                    "marginLeft": 10,
                  },
                  Object {
                    "color": "#858FA1",
                    "fontFamily": "Poppins-Regular",
                    "fontSize": 18,
                    "paddingVertical": 8,
                    "width": 690,
                  },
                ]
              }
            >
              Documents
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingLeft": 60,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "backgroundColor": "#FFF",
        "height": 80,
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "backgroundColor": "#4b8eff",
          "borderRadius": 50,
          "height": 50,
          "justifyContent": "center",
          "opacity": 1,
          "width": "90%",
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Object {
            "color": "#FFF",
            "fontFamily": "Roboto",
            "fontSize": 20,
            "fontWeight": "bold",
            "textAlign": "center",
          }
        }
      >
        Send Email
      </Text>
    </View>
  </View>
  <Modal
    hardwareAccelerated={false}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0,0,0,0.5)",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/assets/images/loader1.gif",
          }
        }
        style={
          Object {
            "height": 80,
            "resizeMode": "contain",
            "width": 80,
          }
        }
      />
    </View>
  </Modal>
</View>
`;
